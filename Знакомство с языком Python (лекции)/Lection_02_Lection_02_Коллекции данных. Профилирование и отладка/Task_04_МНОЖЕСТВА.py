# МНОЖЕСТВА содержат в себе уникальные элементы, не обязательно упорядоченные
# Одно множество может содержать значения любых типов
# Можно совержашь над ними любые операции

colors = {'red', 'green', 'blue'}
print(colors) # {'green', 'blue', 'red'}

colors.add('red')
print(colors) # {'red', 'green', 'blue'}

colors.add('gray')
print(colors) # {'red', 'green', 'gray', 'blue'} - ДОБАВЛЯЕТ МНОЖЕСТВО

colors.remove('gray')
print(colors) # {'red', 'green', 'blue'} - УДАЛЯЕТ ЗНАЧЕНИЕ ИЗ МНОЖЕСТВА

colors.remove('red')
print(colors) # {'blue', 'green'} 

# colors.remove('red')
# print(colors) # KeyError: 'red' - БУДЕТ ОШИБКА ТАК КАК УЖЕ УДАЛЯЛИЛИ РЕД

colors.discard('red')
print(colors) # {'green', 'blue'} - ДИСКАРД аналог РЕМУВ, только не выдает ошибку, если не находит заданное для удаления во множестве

colors.clear()
print(colors) # set() - все удалили из множества

q = set() # создали пустое множество
print()

#####################################################

print("ОПЕРАЦИИ СО МНОЖЕСТВАМИ: ")

a = {1, 2, 3, 5, 8}
b = {2, 5, 8, 13, 21, 4}

c = a.copy() # {1, 2, 3, 5, 8} - СКОПИРОВАЛ МНОЖЕСТВО А В С
print(c)

u = a.union(b) # {1, 2, 3, 4, 5, 8, 13, 21} - СЛОЖИЛ МНОЖЕСТВО А И В, РАССТАВИЛ ЦИФРЫ ПО ПОРЯДКУ И ВЫВЕЛ ТОЛЬКО УНИКАЛЬНЫЕ ЗНАЧЕНИЯ
print(u)

i = a.intersection(b) # {8, 2, 5} - ВЫВЕЛ ТОЛЬКО ПОВТОРИЯЮИЕЩЯ ЗНАЧЕНИЯ В А И В (пересечения)
print(i)

dl = a.difference(b)  # {1, 3} - удалили из множества а все что есть во множестве б, и вывели то что уникально и не повторяется и осталось в а
print(dl)

dr = b.difference(a)  # {13, 4, 21} - вывели те цифры из б, которые не повторяются с а
print(dr)

q = a.union(b).difference(a.intersection(b)) # {1, 3, 4, 13, 21} //  сперва делаем a.intersection(b), получается {8, 2, 5}, 
# потом а обьединяем с б a.union(b) = {1, 2, 3, 4, 5, 8, 13, 21}, потом из полученного находим разность difference между {1, 2, 3, 4, 5, 8, 13, 21}
# и {8, 2, 5} и получается {1, 3, 4, 13, 21}
print(q)

#####################################################

print("ЗАМОРОЖЕННЫЕ МНОЖЕТВА: ")

a = {1, 8, 6}
b = frozenset(a) # - создали замороженное множество
print(b) # frozenset({8, 1, 6})


